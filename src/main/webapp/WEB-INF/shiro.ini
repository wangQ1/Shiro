# =======================  
# Shiro INI configuration  
# =======================  
#自定义过滤器的错误跳转
[main]
#认证（输入用户名和密码登录）不通过  跳转到/login.html
authc.loginUrl=/login.html
#授权 (没有某个角色) 不通过  跳转到/login.html
roles.loginUrl=/login.html
#登录通过后，再次直接进入成功页面,没有某个角色时跳转到/un.html
roles.unauthorizedUrl=/un.html
#授权 (没有某个权限) 不通过  跳转到/login.html
perms.loginUrl=/login.html
#登录通过后，再次直接进入成功页面,没有某个权限时跳转到/un.html
perms.unauthorizedUrl=/un.html
[users]
# 设置用户信息  
# 语法是 用户名 = 密码(证书), 权限1, 权限2, …, 权限N  
jiaozi = 123456,role1  
  
[roles]  
# 角色信息和角色拥有的权限  
#语法是 rolename = 权限定义1, 权限定义2, …, permissionDefinitionN  
#权限的语法 * 表示所有权限  一般语法是 权限类型.权限动作.权限的资源id  比如  user:delete:1 表示拥有删除1号用户的权限  user:delete:*表示删除所有用户权限  
admin = *  
role1 = user:query:*, user:delete:1
role2 = user:update:*
  
[urls]  
# web中的url过滤    访问这个页面时 要求你登录的账号 必须拥有某些权限
#路径  = 过滤1，过滤2   常用的过滤有  
#  anon 匿名用戶   
#  authc 表示本人和凭证验证过滤类 org.apache.shiro.web.filter.authc.FormAuthenticationFilter 沒有登录自动跳转到登录页  
#  perms 是否拥有某些权限过滤类 org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter 用法 perms["remote:invoke"]  
#  roles 是否拥有某个角色   org.apache.shiro.web.filter.authz.RolesAuthorizationFilter  用法roles[administrator]  
#  user 是否是某個用戶 org.apache.shiro.web.filter.authc.UserFilter   
# 也可以在main中自定义filter url就可以应用   参考http://shiro.apache.org/web.html#programmatic-support  
/login.html = anon
/suc.jsp = authc
/suc.jsp = roles[role3]
/suc.jsp = perms[user:delete:1]